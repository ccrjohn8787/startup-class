- Valid TicTacToe


- UTF-8 Validation
    - search Google for solution


- - SplitArray

    - 给一个整数N，将集合S={1,2,3,...,N}分两个子集S1和S2，问使sum(S1) == sum(S2)的划分方法有多少个。类似subset，leetcode 90。
dp[i][j] = number of ways of picking from first i to sum j
dp[i][j] = take i: dp[i-1][j-A[i]] + not take i: dp[i-1][j]
    - 读一段程序，大概是在一个array中找一个index，使得index左边的summation和右边的summation最接近。如何用O(1) 的复杂度实现。
        - link

- - TriangleInGraph
    - 找出一个GRAPH里面全部的三角形
我的算法： 先做一个访问队列，从一个节点开始BFS遍历，每次把一个节点的所有未访问过的邻居点放入一个LIST,判断这个邻居LIST里面有多少. From 1point 3acres bbs
    - 点互相连接。这个就是与这个节点有关的三角形，对它们计数并把结果记入累加器。之后把这个LIST加入队列，继续遍历。累加器最后返回三角形总数。
这个面试官是个三哥，态度很糟糕。似乎看不懂我写的算法，问了很多莫名其妙的问题。估计他给我的REVIEW很差。请各位大神看看，我的算法确实有问题，还是三哥有问题。
        - link of the above

- Guess number problems:

    - [ ] Passcode:

        - 给你一个password 假定6位， 有个function 每call 一次就给你一个triplet 是password 里的随即三位，order不变。比如google, 可能返回， ggl, goe, oog, ool, ........问如何最有效破译这个密码，写code.
        - 我一开始就是想到tries 假g5a(assuming input is only alphabet), 会转成g#####a. # 可以match any character. 用所有的strings 建tries 然后dictionary 扫一遍不知道有没有理解错
        - 感觉第二题应该是建一个带数字的trie，这样比按所有情况建trie要更有效率
        - 可以在a-z后加入数字节点，表示要匹配多少个字母。然后到时候直接从target string里减掉这么多字母
            - link of above
    - [ ] Shortest Passcode:
        - 一堆密码箱，每个密码都是四位0-9之间，算一个暴力破解序列，包含所有可能的四位序列，让这个序列尽量短 没有找出最佳解法http://www.1point3acres.com/bbs/thread-133413-1-1.html
        - http://www.1point3acres.com/bbs/forum.php?mod=redirect&goto=findpost&ptid=133413&pid=1947712&fromuid=206597
            - link of above
        - 用尽量短的string生成4位数密码的所有组合
            - link of above
        - Sample solution:
            - Link1 Link2
        - Github: Passcode.java
        - 那个密码的题自己用了hashset把所有访问过的数字全部存下来，贴一下自己的代码 最后string的长度是10003， 说明没有重复
        - 因为遍历下一个数字是从0开始。一个state有10条出路，在邻居到达之前不能把所有出路都走完。所以从9999开始是贪心，从0开始就是bt。如果你从0开始就把那个循环从9到0即可。
        - 除了从9到0，还要在序列前端加上000，不然一开始不是0000，是0了

- Probability Questions
    - GenerateWeightedRandom
        - given keywords and frequency, generate random number based on weight distribution
            - Review: Google prep, random weight
            - link of above
        - 写有weight的随机数生成器，请参见以前的面经。写完之后问了如何测试。
        -  given a probability = [.5 .1 .2 .2], label = [A B C D], write a data structure that generates the label based on the prob. 我说先找cumulative probability［.5, .6, .8 1]， 然后弄个0～1之间的random数字比较过去找它的位置就好。他就说有没有更快的方法。 其实他想叫我用binary search，但是我一直以为是不是有什么O（1）的解法，浪费了一些时间后才发现原来他想要binary search， 最后弄出来了。
    - GenerateWordOnProbability
        - given a dict of words [aba, cbc], find the letter to letter probability. b->a 50%, b->c 50%. 这个做的还可以，有一个小bug
        - letter of probability的题目是这样， 做一个27x27的matrix， 26 个代表字母，最后一个代表开始或者结束，然后你每个字母走过去找它出现的次数，最后除一下row sum求概率就好
            - link
        - give a dictionary with many words,
ape
apple. From 1point 3acres bbs
        - ...
randomly generate a word from the dictionary.
calculate the probability from one letter to another and one letter to the end.
and the start probability of each letter
            - link
    - 一个list, 含有k个数，然后给N， 让等概率的从1-N里选出不在list里的数。 这题一下子问懵了，纠结半天怎么算那个等概率。.鏈枃鍘熷垱鑷
        - 随机从N里选一个数直到不在那个list里
    - Have a rand(N) to return an integer from 0 to N-1 with 1/N probability evenly, design a rand to return a number from 0 to N-1 but not any from a given sorted list such as {2, 4, 9}. require uniform distribution
        - Similar to previous problem
        - Link
    - 给一个infinite array 只有0 - 9 设计一个
def getprobability(n):得到某个数出现的概率。
我用的reservoie sampling 做的，然后我补充如果直接hashing 会overflow. 然后考虑到一multi thread情况，需要写两个函数，一个专门产生 sampling list
一个专门计算概率。 这里要有做个checker看看产生的list是不是有效，也就是 0-9数的概率和要为1
        - follow up:
现在你得到概率，你怎么按照概率产生刚刚的数。
两个方法，第一个直接用刚刚的array random index取数，但是问题是如果是multithread 调用这样做有问题。 第二个方法：定时产生所有数的accumulate probablilty 根据这个probabolity array generate number即可。
答完烙印还挺满意，拍了照片。
        - Solution:
            - Probably don’t need reservoir sampling for original question. Just maintain the count. But sampling is better
            - Follow up is GenerateWeightedRandom
    - 这道题说起来比较复杂。假设你有一张表，这个表是每个字母在其他字母后面出现的概率。然后这个概率是根据一些东西算出来的，比如说一本字典。. 鐣欏鐢宠璁哄潧-涓€浜╀笁鍒嗗湴
    - 举个例子吧
假设字典是 ["cat", "cap"]
那表格就会是
        a     c       p     t
a     0     0.5    0    0
c     0      0      0    0
p    0.25  0      0    0
t    0.25   0     0     0
ok，不知道格式会不会坏><，总之就是你有这样一个表格，然后他们的概率加起来是1嘛，但你不用担心这个表格是怎么来的。. 
    - 然后如果你有这本字典，让你返回长度是4的最可能出现的单词（保证只有一个）
        - [ ] follow up是如果没有这本字典，你如何算长度是4的最可能出现的单词（保证只有一个）https://en.wikipedia.org/wiki/Viterbi_algorithm
        - [ ] 再follow up是，假设你现在根据比如说google search query有一个，2014年最经常搜索的单词list，然后根据这个list算出一个概率表格以及最可能出现的单词，然后现在你知道2015年添加了一些单词，如何更efficient的算出新的概率表格以及最可能出现的单词。- convert percentage back to absolute value and calculate?
        - link
    - music list, if shuffle is possible or not, test cases
你有一个music的播放列表，里面的歌曲unique，但是播放列表的长度未知。. 1point3acres.com/bbs
    - 这个音乐播放器APP有两个模式：random模式和shuffle模式。
random模式就是每次随机播放列表里的一首歌；
shuffle模式就是shuffle列表里的歌，然后顺序播放，放完以后重新shuffle，再顺序播放；. From 1point 3acres bbs
    - 现在给你一个播放历史记录，要求你写一个函数来判断用户使用的是random模式，还是shuffle模式。
        - link

- StockPriceUpdate

    - 有一个方法update(t,v)，t是时间，v是值。大部分的t是新值，偶尔会有已经出现的t，这样的话就更新相应v。设计数据结构存储这个update的值使得获取最新值和最大值花的时间最少。最新值很容易想到O(1) O(1)的方法，最大值除了heap没想到更好的
    - 一道常出现的面经题，拿出来讨论下自己设计接口，使得支持两个funciton：onUpdate(timestamp, price) 和 onCorrect(temistamp, price). 可以理解为有一个时间流，每一个timestamp都对应一个股票的时间，每次调用一次onUpdate的时候，就对我们设计的那个类更新对应的timestamp和price， onCorrect就是修改之前的一个timestamp的price。最后，我们的类要能返回latest price， max price 和 min price。一开始题目描述的太模糊了我都不知道到底要干啥，墨迹半天才知道是想设计一个类，然后中途也写的乱七八糟的，用了两个Deque来存储一个递增和一个递减的序列，类似窗口题的方法。当onCorrect的时候就去看队列里面有没有对应的timestamp，有的话移除然后重新入队。感觉这面面的也不是太好。”
感觉应该是定义一个node class {timestamp, price}, 然后放入maxheap和min heap中吧，但是如果是用java的话，必须要用hash heap才可以吧，这样的话太麻烦了啊
    - 要求写一个关于stock prize的类，要满足几个函数 1）可以add这一时刻该stock的prize 2）可以update之前时刻添加的stock prize 3）可以delete之前某一时刻的stock prize 4）可以query目前为止stock prize的max与min，要求是针对不同情况进行优化，比如add频繁，update频繁，query频繁等等。LZ当时maintain的一个hashtable（dictionary）以及current max与min，注意到update以及delete时的细节就行
    - 是有一个stock feed会返回股票时间戳和股票价格，然后因为会有错误，相同时间戳会返回多个股票价格（以最后一次接受的股票价格代表那个时间戳的价格），实现 得到股票价格的最大值和最小值还有股票价格的最新值，我用的hashmap和priorityqueue。follow up是如果stock feed出错率很低，如何改进。
    - 设计一个data structure，接受一个data stream，需要有基本的get,set,update,delete外还要getMax和getMin

        - link
    - 自己设计接口，使得支持两个funciton：onUpdate(timestamp, price) 和 onCorrect(temistamp, price). 可以理解为有一个时间流，每一个timestamp都对应一个股票的时间，每次调用一次onUpdate的时候，就对我们设计的那个类更新对应的timestamp和price， onCorrect就是修改之前的一个timestamp的price。最后，我们的类要能返回latest price， max price 和 min price。一开始题目描述的太模糊了我都不知道到底要干啥，墨迹半天才知道是想设计一个类，然后中途也写的乱七八糟的，用了两个Deque来存储一个递增和一个递减的序列，类似窗口题的方法。当onCorrect的时候就去看队列里面有没有对应的timestamp，有的话移除然后重新入队。感觉这面面的也不是太好。
    - 我想用一个hashmap, key 是时间，value 是那个node，那就可以修改了. Use 2 heaps - minHeap and maxHeap
其实也不用重排，再node中加一个latest的flag；当有update时，就旧的node的latest设成false，同时创建一个新的放入heap；当要取top element时，如果发现不是latest的，就弃掉，再取下一个

- Geometry problems
    - Convex Hull:
        - convex hull algorithm，只需要讲想法不用写代码
            - Link: http://www.1point3acres.com/bbs/thread-159899-1-1.html
        - 给一堆点，问怎么画凸包，说思路就好。这个面经上没见过，lz当时是完全不知道凸包的概念。
            - link
        - Solution: just read wiki convex hull algorithm
    - 临时换了一个亚洲大哥。哥们出了一个画图题，给一个class {draw(boolean), move(x,y) // absolute coordinate}. draw 为true的时候是画线，draw为false的时候是抬起笔，move就是把笔移到某个位置。然后让画一个m*n 的矩形，每个格子长度为L。要求中心对称。（有俩bug，一是算float的时候两个整数相除， 2是for loop 时<= 写成<）
    -     follow up： 如何一次性画完这个矩形，运行overlap某些edge。
    follow up： 如何一次性画矩形，不允许overlap。
    follow up： miniMize overlap 的edge，如果证明为啥你的方法是minimize的。（只能达brute force所有的可能性，然后算出最小的一个。 然后问brute force有何优化（答：memorization， 貌似不对。））
    - 四个点判断是否正方形（思路不用code）。
    - 然后第二题是给一些类和function：
  class Point{int x, y;}
  class Rect{Point p1, Point p2}
  class Shape{
       int inside(Rect r){}; //shape是不规则的图形，给了一个function判断这个shape和rect的重叠关系，
                                   //如果rect完全在shape里 return 1. 如果rect和shape有overlap， return 0， 如果rect 完全在shape外面，return－1
  }
  draw(Rect r){};
  以上是已经有的function，
  给一个长方形的screen，再给一些shapes，要求写一个function在screen上画出这些shape。写完后又问了一题，如果有A和B两个shape，A和B有overlap，用给的inside function写一个新的inside function，判断一个rect和这个overlap area的关系，同样返回－1， 0， 1
      - 然后问这个关系是什么，LZ一开始没看出来，其实就是min(A.inside(rect), B.inside(rect));
  然后问如果把min换成max的话这个算的area是什么样的。应该是A和B的union.

- [ ] DataDog
    - 就是一个interface，里面有increment, lastMinute,lastHour,lastDay这几个method。目标是call last那几个函数的时候回返回前一分钟，一小时，一天内的request的数量。具体的做法就是楼上大牛说的circular buffer，开一个86400的buffer然后转着圈儿update就好了
    - 设计一个CPU和内存占用是Deterministic Behavior的Event Class，支持:IncrementCount(), GetEventCountLastMin(), GetEventCountLastHour(), GetEventCountLastDay(), 每秒可以有多达million个call，也可能什么都没有。这一轮最差了，最终也没有找到合适的data structure。后来还问了很多multi-thread的问题：如果多个线程同时cal怎么办。说用mutex， lock， notify等。让在函数中实现这些。
        - link of above

- 题目是，在发邮件的时候，比如输入 ben ，下边会提示名字(FirstName, LastName)或者邮件以 ben 开头的人，设计一个类来完成这个提示功能。假设每次我们返回最多10个这样的结果。. more info on =

    - Follow up I，如果希望返回的结果是alphabetic有序的，比如输入ben的时候， benaa 在 benbd 前面，怎么设计。
    - Follow up II，如果我们希望FN是ben开头的在LN是ben开头的前边，ben Black 在 mike Bend前。

- [ ] Complex tree problems

    - Quad Tree

        - 比较两个quad tree。然后return 一个新的，这题虽然简单，但是很容易出bug。最后面试官引到了一下帮助发现bug。
        - quadtree。大概就是说一个黑白image，用的是quadtree表示的。黑的就是0，白的就是1。问求这个quadtree表示的image里黑像素的比例。
然后follow up就是求combine两个quad tree后产生一个新的image的quadtree，rule是就是只有两个images都是黑merge后才是黑，其他都是白

            - Sample solution: http://www.1point3acres.com/bbs/thread-156466-1-1.html
        - 黑白2D array表示的image。边长是2^n。设计一个class来存它，用尽量少的space。提示是可以不断把图形分割成四块，分完继续分。如果其中一块里面所有格都是黑，那一块就是黑。
   然后连个相同大小的的image相交生产第三个image，遵循黑黑得黑，其他都白的规则。
