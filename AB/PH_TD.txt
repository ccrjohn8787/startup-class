0. Strongly Connected Component:
http://www.geeksforgeeks.org/strongly-connected-components/

1. Decode string:
Often, we want to encode raw IDs in our database by hiding them behind some
2-way decodeable hash. So, a URL which would have at one time been:
https://www.airbnb.com/rooms/848662
becomes
https://www.airbnb.com/rooms/kljJJ324hjkS_
We decode the ID kljJJ324hjkS_ to 848662 on our backend and serve the
relevant content. at some point, we start getting 404 errors from clients
requesting a certain URL of the form
https://www.airbnb.com/rooms/kljjj324hjks_
This can happen if certain clients, email services, or url shorteners "
sanitize" the url. Unfortunately, this change breaks decoding and the
resource cannot be found.
To assess how big of a deal this is, we may want to recover the IDs of the
targets that were 404ing.
Your task:
Given a method decode(testEncStr) which will return the decoded int id if
testEncStr is decodeable or will throw an exception or return null (
depending on the language) if not, implement a new method decodeFind(String
badEncStr) which takes a string and returns the decoded int id.

2. find median from large file of integers: binary search - O(32n)
其实有很多对大file的处理方法。 在interview当中，华人哥哥给出的hint是用binary search
首先， 我们知道对任何大的file median of any int will between INT_MIN and INT_MAX。所以我们知道了upper bound 和lower bound。我们猜一下median might be "guess = lower+(upper-lower)/2"。之后我们可以验证对不对。就是扫一遍这个file，看看是不是有一半的element确实小于这个数字。如果是的话，这里注意一定要返回 smallest element in the file that is larger than the guess。如果有超过一半的数据小于这个guess，可想而知用binary search的方法，下一步就是移动上线到guess-1. 反之移动下线。对吧。那么这个算法最多需要scan 32次fille对不？这个数字当时我有点含糊。但是现在想想应该是对的。

3. CSV Parser: http://buttercola.blogspot.com/2015/11/airbnb-csv-parser.html
    - a, b, c, d => a| b| c| d
"abc", a, b => abc| a| b
"abc ""d""", a, b => abc "d"| a| b
大概的意思是，如果字符串被左右引号包着，去掉那对左右引号，如果引号里面还有引号则要保留，但是如果有重复引号，就缩成一个。所以""d""会变成"d"

4. 实现一个mini parser, 输入是以下格式的string:"324" or"[123,456,[788,799,833],[[]],10,[]]"
要求输出:324 or [123,456,[788,799,833],[[]],10,[]]
也就是将字符串转换成对应的格式的数据.
   输入一个数组的字符串, 要返回一个数组, 里面每一个元素是要么一个整数, 要么是一个数组. 但是注意数组可以多层嵌套.
   
5. Given a list of word and a target word, output all the words for each the edit distance with the target no greater than k.
e.g. [abc, abd, abcd, adc], target "ac", k = 1,
output = [abc, adc]
  http://buttercola.blogspot.com/2015/11/airbnb-k-edit-distance.html
Naive Solution:
A naive solution would be, for each word in the list, calculate the edit distance with the target word. If it is equal or less than k, output to the result list. 
If we assume that the average length of the words is m, and the total number of words in the list is n, the total time complexity is O(n * m^2). 
A better solution with a trie:
The problem with the previous solution is if the given list of the words is like ab, abc, abcd, each time we need to repeatedly calculate the edit distance with the target word. If we can combine the prefix of all words together, we can save lots of time. 
