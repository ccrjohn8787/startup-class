1. Hilbert curve: 见图，忘了这东西叫什么名字了。每次给你一个(x, y, iter)，问你在iter这张图中在(x, y)坐标的点是第几个？
解法：从大往小左，逐渐细化。每次先算出当前点在当前iter是在第几象限，先加上前面那些跳过去的象限里的点。然后找到这个点在这个象限的相对坐标新(x,y)，但是还不够！对于三四象限的点，因为方向变了，需要做镜面映射，把(x,y)映射成(y,x) (第三象限) 或 (M-y, M-x) (第四象限)，M是象线的长宽

2. 写echo TCP client， 向面试官的server发请求， 读回数据。地里比较少人说这种， 我来详细说一下， 情境是这样的： 想象你开车， 踩下油门，车会加速，放开油门，车会减速。 client向server发的请求有以下2种： （a）STATUS --表示查询现在车的速度和踩下踏板的压力； （b）THROTTLE 50.1 --- 这条指令是“THROTTLE” 加上一个数字， 表示我现在将踩油门的压力调为50.1

EXAMPLE: 比如在telnet中
STATUS
0.0 0.0     (这行是server返回的， 第一个数字表示压力，第二个数字表示速度)
THROTTLE 50.1 (这个指令发出 server没有返回)
STATUS
50.1 3.75   (可以看到速度在缓慢上升)
STATUS     (过几秒后，你又发STATUS指令过去)
50.1 15.98   (速度依旧上升。。。)

对就是这样，像是简单物理实验。

写完TCP client后，要求是写一个方法将速度控制到达一个target speed

最后一个问题是求这个 delta力 和 delta速度 之间的函数关系

3. - boggle game, 但是呢比如你现在走了一个词apple, 那么a, p, p, l, e这几个char的位置不能继续用了。于是给你一个board, 一个dict让你计算最多能有多少个valid单词出现在这个Board上面
    - Link

    - Related:
        - 题目是给定一个2d matrix of letters和一个dictionary，找出一条path包含最多的存在于字典的word个数 讨论了半天算法，真到写code的时候时间就来不及了，test case没来得及写，也没来得及优化。

4. Airbnb: Rectangle: You have a plain with lots of rectangles on it, find out how many of them intersect.
