- [ ] 一棵树，每个节点有一个父节点，多个子节点；给定一个子节点，找到另一颗树中相同位置的节点。这个题目要自己设计数据结构，楼主开始的时候算法写的不对，只记录了最底层子节点在父节点的孩子序列中的位置，应该要记录所有上一层子节点在其父节点的孩子序列中的位置。

- [ ] 青蛙过河的问题：一条河上面会飘树叶，只有每个点都有树叶后青蛙才能过河。给定的输入是一个数组，数组的index是时间点，每个数组的值代表当前点有树叶落下，问青蛙什么时候才可以过河。楼主说先遍历一遍数组找到最大值，然后构造一个boolean数组，然后用一个counter记录树叶的个数，直到所有的点都有叶子。面试官在写完代码问楼主为什么用boolean的数组，楼主说节省空间，然后面试官说其实可以用HashSet做，但是也没有让楼主再写代码。等楼主回去以后跟同学聊天，发现面试官的意思是用HashSet遍历一次输入数组就可以。

- [ ] 一段视频中有一些可以放广告的位置，长度不同，有一堆可以选的广告，长度也不同，问怎么放最多和最长的广告

- [ ] 实现一个buffer管理系统，不断的存入图片，图片大小不同，然后另一边不断的读出图片，类似于实现一个blocking queue, 但是要求底层实现，连list都不能用

- [ ] 给一个string  abbcba 按字符出现的频率编码，b->1, a->01, c->001，输出编码后的串

- [ ] snapchat discover/moment 的一个应用抽像出来的，怎么判断发monment所属在自己的圈子里，就是相当于给一个多边形，怎么快速找到一个点在不在多边形里

- [ ] 给我看了一个snapchat给好友群发消息的功能，可以任意选中和删除想要投递消息的好友，并显示群发好友的list(按先后选中的顺序)，设计一个数据结构，实现
- toggle(String username);
getList();
LZ给的hashmap + doubly linked list的设计，类比LRU cache, 详细解释了一下，分析了时间复杂度。小哥说是最优解了，不coding

- [ ] 给如下结构
-   class ChainSnap {
        List<ChainSnap> recipients;
        boolean hasCycle();
  }
让实现其中的hasCycle()。实际就是有向图判断有没cycle，用dfs加两个hashset判断globally visited 和 temporarily visited。 小哥问能不能不用额外的数据结构（那两个hashset）,但可以把以上的class修改一下。LZ说可以加两个boolean变量在class里。小哥问了两种方法在空间消耗上的差异，然后问能不能再减少空间的开销。。后来提示说那两个变量可能的值只有几种组合，然后提示用enum类型。然后让LZ写了用enum的那种方法的代码。

- [ ] 题目问了XML parser, LZ不熟悉XML，就改成了HTML Parser, 本质上一样
- 输入是一个tokenizer对象，可以调用其getNextToken()函数获得下一个token, token结构包括name和tag，name就是具体的文字，tag有open,close,text三种，让把所有的token建成一棵树
比如：
       <html>
            <user>
                <id>aa</id>
                <meta>bb</meta>
            </user>
       </html>
. 1point 3acres 璁哄潧
得到的token就是
("html","open"). 鍥磋鎴戜滑@1point 3 acres
- ("user","open")
("id","open")
("aa","text")
("id","close")
("meta","open")
("bb","text")
("meta","close")
("user","close")
("html","close")
LZ的方法是用stack来存parent, 遇到open和text建新node, 并把新node加到stack顶部node的child list里面，如果是open就把新node压栈，遇到close就pop掉stack顶端的node
写完以后小哥的follow up是如果输入的token有问题，比如close tag和open tag不匹配，如何做verification

- [ ] 1.反对角线打印矩阵，电面面经题
- 2.给两个string判断是不是anagram
follow up, 给一个长string一个短string, 判断长string里是否存在substring和短string是anagram,要求O(n)时间，n是长string的长度 鏉ユ簮涓€浜�.涓夊垎鍦拌鍧�.
- LZ用了移动窗口+hashmap存出现次数的方法，好像不是小哥想到的方法，纠结了一段时间此法是否work, 小哥想到了overfit的问题，好心提醒了一下可以在hashmap存负数，然后coding解决，闲聊了一会
*overfit指的是当前substring某个字母出现个数多于短string里面该字母的出现次数

- [ ] 给一个n*n的chess board，knight可以跳2*3的格子的对角线，就是国际象棋的规则。求给出一个起始点，knight能否跳到给定的重点。BFS搞定。followup print出来路径，backtrace就可以了，把每个格子上个格子的方位存下来，允许使用额外空间。写完后跑了test，小哥说：you did a good job

- [ ] 问我N-Queen见过没，我说见过，就出了一个bipartite graph的题

- [ ] Coding：题目是以Snapchat自己的feature的形式给出的，经过分析抽象出来就是一个图的题，图里的每一个节点都有一个score。给定一个节点，找到从这个节点出发，长度少于等于N的路径里面，Sum(Score)最大的那个路径，并且打印出来。解法用BFS就可以

- [ ] System design.
- (1) Sort large set of numbers
(2) Design Snapchat Story feature

- [ ] 半轮Design，半轮coding.
-     Design Snapchat Discover feature.
    Coding: 剩了没多少时间开始问我算法题。先问我见过BigInt这个题没，我说见过，但是没写过。于是就开始让我写，我写了没几行，面试官就说OK，知道了，你不用写了。换了一个题，给一堆(name, phone#)的记录，把属于同一人的记录group到一起打印出来。name一样的，phone一样的都属于都一个group。跟面试官讨论了一下如何用两个map解决的想法，然后时间就到了。这半轮的coding基本没写代码。

- [ ] 编程题是给定一个有向关系图，在给定2个名字，求出这两个人的共同朋友（即2个点能达到的共同节点，类似树的共同祖先）

- [ ] 题目是这样的，通过二维数组来建一颗四叉树。四叉树的叶子节点来自二维数组相邻的上左下右四个方块的值。建树规则是，四个节点的都是0，则父节点也是0，如果四个节点都是1，则父节点也是1.如果四个节点既有0，又有1，则父节点是2.如果四个节点都是2，则父节点是1.(规则有点复杂，一些细节我可能忘记了，但大体是这样）我是用递归的方式建树的。

- [ ] 题目是这样的：一棵树，代表上司和员工的关系，然后每个节点都有一个对应的权值。然后公司开了一个party，为了让员工们更好的交流，有个规定，如果上司去参加party，那么他的直接下属（直接孩子节点)就不去（同理，如果下属去了，直接上司，父节点就不去）。然后设计一个算法，参加party的人的权值总和最高。这是一道动态规划题，思路是每次计算一个员工去的权值之和与不去的权值之和，从叶子开始。

- [ ] 题目是如果通讯录里从某一个名字开始翻转了，请把这个名字找出来。类似leetcode这道题：find minimum in rotated sorted array。

- [ ] 第一轮 印度哥哥 先在白板上写了关于linkedlist的题目，把linkedlist拆成两个，odd一列，even一列.

- [ ] bloomfilter， 支持add， mightcontains，resize，remove

    - [ ] follow up  如何support remove element from bloomfilter, 当insert element很多以后, 如何扩充容量

- [ ] 给一个double array， 让输出能使用＊，＋， 以及（）得到的maximum。 follow up，如果有<0的怎么处理

- [ ] 先问了问background，然后出了magzine里找massage的题目，之后又问了design的题目，类似于google doc，如何保证大家拿到的 信息是一致的，在同一个version

- [ ] One Edit Distance: find if there is a substring in s1 that is <= 1 edit distance from s2

- [ ]  design query suggestion system, implement trie tree's seach function

- [ ] 第一轮，ABC小哥，给两个string的数组和一个pattern数组，判断将两个string数组分别和pattern转化后的结果是否相同。例如s1={"abc", "a", "ccc"}, s2={"bc", "aa", "d"}, pattern={1, 0}，则s1和p的转化结果是"aabc"，s2和p的转化结果也是是"aabc"，则返回true。如果pattern是{0, 1}，则转化结果分别是"abca", "bcaa"，则返回false。followup是，如果给定s1和s2，判断是否存在一个pattern使得转化结果一致。 过程中要求分析算法复杂度。

- 第二轮，韩国大叔，Leetcode的symmetric tree。这题我一开始上来用了最精简的方法，然后似乎大叔不太能follow，要我从最简单的BFS做一遍，然后又从DFS做一遍。现在回过头来总结，其实面试的时候不要一开始给出最优解，给出一个相对naive但是直观的解，然后逐步改进，这样可以向面试官展现你的thinking process，一上来就最优的，很多面试官都不是很喜欢的。followup就是各种DFS和BFS的tradeoff，主要是在social app的应用中。

    - [ ] 要用iterate解法

- [ ] . 涓€浜�-涓夊垎-鍦帮紝鐙鍙戝竷
- 第三轮，华人小哥，就是大家现在看到新OA（http://www.1point3acres.com/bbs/ ... read&tid=162312）。其实算法不是很复杂，按照长度和尾字幕分成bucket，然后没个bucket建trie，用trie来生成缩写。但是在讨论算法复杂度的时候我脑子犯浑了，不知道怎么搞的跟面试官为一个无所谓的复杂度讨论了半天，然后写代码的时间就所剩无几，写完了代码，面试官就问了问打算怎么测试就结束了。本轮面试官是manager，估计跪在这里了。

- 第四轮，华人小哥，一个矩阵表示的迷宫，1表示有障碍，0表示没有，求一条从A点到B点的路径。第一遍，我忘了写用visited matrix，所以复杂度很高，在面试官提示下，增加了visited matrix，但是时间没有多少了。followup是如果迷宫不是联通的，问怎么remove障碍，使得可以从A到B

- [ ] Task Scheduler, 类似Leetcode的course schedule那道题，用toplogical sort 搞定

- [ ] 类似leetcode super ugly number

- [ ] IP address filter

    - [ ] 根据计算机网络里面那个CIDR然后来做IP address filtering。比如给定一些rule: "7.0.0.0/8", 那么所有前8位是7的address应该全部被filter掉。楼主用hashset来存rule然后用一些位运算的方法来做filter

- [ ] 从头写二叉搜索树、串化二叉树、会议室二、公司派对、带层权重求和、线程池

- [ ] 给定一些输入如
- Employee,Manager,ItemsSold
Alice,,5
Bob,Alice,3
Carol,Bob,2
David,Bob,3. Waral 鍗氬鏈夋洿澶氭枃绔�,
- Eve,Alice,2
Ferris,Eve,1
要求打印出这个样子
Alice 16
    Bob 8
        Carol 2
        David 3
    Eve 3
        Ferris 1
楼主先自己设计数据结构，和第一面那个基本一样，只是多了一个int num来记录数量，根据输入构建树，注意这里每条记录给定的顺序是随机的，所以可能先出来David,Bob,3然后才是Bob,Alice,3。不注意的话可能会有小bug报错。然后postorder算出所有node的child的数量和，然后update自己的，之后preorder打印。写的时候有个小bug，改正之后通过。follow up要求打印成这个样子
Alice 16
|-Bob 8. From 1point 3acres bbs
- | |-Carol 2
| \_David 3
\_Eve 3
  \_Ferris 1
然后楼主就跪在这里了，怎么改都是有bug，最后也没改出来。最后面试官说，你的大方向是对的，只是你API设计的不够好，你如果把parent需要打印的prefix也传递给child，打印起来就非常方便了。楼主终于醒悟，刷题太多导致思维僵固了，另外这一面全程要coding并且编译运行。

- [ ] 我们有个很huge的social network，你需要design一个system，这个system可以用来evaluate各种我们设计的朋友推荐算法，你要怎么设计。说了一下大概的设计，面试官更看重我如何准备data来做evalution，于是就也说了说这个部分。

- [ ] 给定一个grid matrix，就是类似围棋盘那种东西。然后某些grid（放棋子的地方）上面有点，给定一个query点的位置，返回k nearest点on this grid matrix。第一开始我assume给了个list，里面是自己设计的一个结构体，记录了坐标和距离query点的距离，然后写了个comparator来sort这个list，然后返回k个node。之后要求优化到O(n)，楼主就写了quick selection。之后要求再优化，然后楼主就**了，尼玛这是要让我写kd-tree的节奏

- [ ] 1. valid BST     2. 添加括号使得表达式值最大，表达式只有+ - *

- [ ] LRU Cache

- [ ] 题目： ternary expression paser （三目运算符）， input是一个string，其中 'T' 表示true， 'F' 表示false， 要求返回最后运算的结果。

- 乍一看题目很直接， bool expression ? first result : second result ，但实际上我们通常都用的都是非常简单的形式，但每一部分都可以无限嵌套。例如：
T ? T : F ? T : 1 : 2 : F ? 3 : 4;
原本妹子没让我考虑bool expression部分也嵌套的情况，结果我本着把问题分析清楚的原则，成功把问题弄的复杂了，她后来觉得这可以作为follow up

- [ ] 题目： construct string from web page + XML paser，再次感谢面筋，不过有一点不同是需要设计data structure保存paser后的结果。. 1point 3acres 璁哄潧
- 每个token有如下结构，然后给了个API getNextToken()获取下一个token, 我表示应该还有个hasNextToken()。
token {
  string name; // e.g.  story, id, snaps
  string tag_type; // {open, close, text} 三种type
};
